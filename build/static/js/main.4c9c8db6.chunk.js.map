{"version":3,"sources":["Component/NavBar/NavBar.js","Component/ContactList/ContactItem/ContactItem.js","Store/reducer.js","Store/actions.js","Hooks/useSetContact.js","Component/ContactList/ContactItem/index.js","Component/ContactList/ContactList.js","Component/ContactList/index.js","Component/Contact/Contact.js","Component/Contact/index.js","Views/HomePage/HomePage.js","Store/store.js","Component/App/App.js","index.js"],"names":["NavBar","StyledAppBar","color","position","styled","AppBar","withTheme","theme","id","name","address","phoneNumber","email","handleDelete","edit","setEdit","handleEdit","contact","handleChange","errors","Wrapper","Operations","Avatar","People","StyledBox","Title","TextField","value","variant","size","onChange","error","required","Content","Action","onClick","Grid","props","breakpoints","down","Box","span","initialState","contacts","addContact","dispatch","type","payload","editContact","useSetContact","useDispatch","useState","setErrors","setContact","e","target","validations","useEffect","isError","handleAdd","fetch","process","method","headers","body","JSON","stringify","then","res","json","catch","console","log","Container","removeContact","div","ContactList","contactList","map","c","key","_id","useSelector","state","StyledCard","elevation","StyledCardContent","WrapperAdd","focused","inputProps","maxLength","Card","CardContent","HomePage","reducers","combineReducers","actions","filter","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","thunk","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c9c8db6.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AppBar } from '@material-ui/core'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <StyledAppBar  color='secondary' position='relative'>\r\n        </StyledAppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n    padding: 1rem;\r\n    display:flex;\r\n    align-items:center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid, Box, Avatar, TextField, withTheme } from '@material-ui/core'\r\nimport { People } from '@material-ui/icons'\r\n\r\nconst ContactItem = ({ theme, id, name, address, phoneNumber, email, handleDelete, edit, setEdit, handleEdit, contact, handleChange, errors }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n            <Operations>\r\n                <Avatar>\r\n                    <People />\r\n                </Avatar>\r\n            </Operations>\r\n            <StyledBox>\r\n                <Title>Name</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{name}</Content>\r\n                        : <TextField\r\n                            name='name'\r\n                            value={contact.name}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.name}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Address</Title>\r\n\r\n                {\r\n                    !edit\r\n                        ? <Content>{address}</Content>\r\n                        : <TextField\r\n                            name='address'\r\n                            value={contact.address}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.address}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Phone Number</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{phoneNumber}</Content>\r\n                        : <TextField\r\n                            name='phoneNumber'\r\n                            value={contact.phoneNumber}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.phoneNumber}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Email</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{email}</Content>\r\n                        : <TextField\r\n                            name='email'\r\n                            value={contact.email}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.email}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <Operations>\r\n                <Action onClick={() => handleEdit(id)}>{edit ? 'Save' : 'Edit'}</Action>\r\n                {\r\n                    !edit\r\n                        ? <Action onClick={() => handleDelete(id)}>Remove</Action>\r\n                        : <Action onClick={() => setEdit(false)}>Cancel</Action>\r\n                }\r\n            </Operations>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(ContactItem)\r\n\r\nconst Wrapper = styled(Grid)`\r\n    height:100%;\r\n    width:100%;\r\n    padding:.2rem 0;\r\n    margin-bottom:1rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap:.3rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n        padding: .5rem;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled.span`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    gap:1rem;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`\r\n","import { SET_CONTACT, ADD_CONTACT, REMOVE_CONTACT, EDIT_CONTACT } from './actions'\r\n\r\nconst initialState = {\r\n    contacts: []\r\n}\r\n\r\nexport default function ContactReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case SET_CONTACT:\r\n            return { ...state, contacts: actions.payload }\r\n        case ADD_CONTACT:\r\n            return { ...state, contacts: [...state.contacts, actions.payload] }\r\n        case REMOVE_CONTACT:\r\n            return { ...state, contacts: state.contacts.filter(c => c._id !== actions.payload._id) }\r\n        case EDIT_CONTACT:\r\n            return {\r\n                ...state, contacts: state.contacts.map(contact => {\r\n                    if (contact._id === actions.payload._id) {\r\n                        contact = { ...contact, ...actions.payload }\r\n                    }\r\n                    return contact\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setContacts = (contacts) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_CONTACT,\r\n        payload: contacts\r\n    })\r\n}\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: contact\r\n    })\r\n}\r\n\r\nexport const removeContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_CONTACT,\r\n        payload: contact\r\n    })\r\n}\r\n\r\nexport const editContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: EDIT_CONTACT,\r\n        payload: contact\r\n    })\r\n}","export const SET_CONTACT = 'SET_CONTACT'\r\nexport const ADD_CONTACT = 'ADD_CONTACT'\r\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT'\r\nexport const EDIT_CONTACT = 'EDIT_CONTACT'","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addContact, editContact } from 'Store/reducer'\r\n\r\nconst useSetContact = (name = '', address = '', phoneNumber = 0, email = '') => {\r\n    const dispatch = useDispatch()\r\n    const [edit, setEdit] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [contact, setContact] = useState({\r\n        name: name,\r\n        address: address,\r\n        phoneNumber: phoneNumber,\r\n        email: email\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setContact({\r\n            ...contact,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const validations = () => {\r\n        let errors = {}\r\n        errors.name = contact.name ? false : true\r\n        errors.address = contact.address ? false : true\r\n        errors.phoneNumber = contact.phoneNumber ? false : true\r\n        errors.email = contact.email ? false : true\r\n        setErrors({\r\n            ...errors\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        validations()\r\n    }, [contact])\r\n\r\n    const isError = () => {\r\n        return errors.name || errors.address || errors.phoneNumber || errors.email\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        !isError() &&\r\n            fetch(`${process.env.REACT_APP_API_URL}/contact`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify(contact)\r\n            }).then(res => res.json())\r\n                .then(res => {\r\n                    dispatch(addContact(res))\r\n                    setContact({\r\n                        name: '',\r\n                        address: '',\r\n                        phoneNumber: 0,\r\n                        email: ''\r\n                    })\r\n                }).catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        if (!edit) {\r\n            setEdit(true)\r\n        } else {\r\n            !isError() &&\r\n                fetch(`${process.env.REACT_APP_API_URL}/contact/${id}`, {\r\n                    method: 'Put',\r\n                    headers: {\r\n                        \"Content-Type\": 'application/json'\r\n                    },\r\n                    body: JSON.stringify(contact)\r\n                }).then(res => res.json())\r\n                    .then(res => {\r\n                        dispatch(editContact(res))\r\n                        setEdit(false)\r\n                    })\r\n                    .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n    return { contact, handleChange, handleAdd, edit, setEdit, handleEdit, errors }\r\n}\r\n\r\nexport default useSetContact\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport ContactItem from './ContactItem'\r\nimport { removeContact } from 'Store/reducer'\r\nimport useSetContact from 'Hooks/useSetContact'\r\n\r\nconst Container = ({ id, name, address, phoneNumber, email }) => {\r\n    const {\r\n        contact,\r\n        handleChange,\r\n        handleEdit,\r\n        edit,\r\n        setEdit,\r\n        errors\r\n    } = useSetContact(name, address, phoneNumber, email)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (id) => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/contact/${id}`, {\r\n            method: 'Delete',\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(res => dispatch(removeContact(res)))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ContactItem\r\n                id={id}\r\n                name={name}\r\n                address={address}\r\n                phoneNumber={phoneNumber}\r\n                email={email}\r\n                handleDelete={handleDelete}\r\n                edit={edit}\r\n                setEdit={setEdit}\r\n                contact={contact}\r\n                handleChange={handleChange}\r\n                handleEdit={handleEdit}\r\n                errors={errors}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Container\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ContactItem from './ContactItem'\r\n\r\nconst ContactList = ({ contactList }) =>\r\n    <Wrapper>\r\n        {\r\n            contactList.map(c =>\r\n                <ContactItem\r\n                    key={c._id}\r\n                    id={c._id}\r\n                    name={c.name}\r\n                    address={c.address}\r\n                    phoneNumber={c.phoneNumber}\r\n                    email={c.email}\r\n                />\r\n            )\r\n        }\r\n    </Wrapper>\r\n\r\nexport default ContactList\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n`","import React from 'react'\r\nimport ContactList from './ContactList'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Container = () => {\r\n    const contactList = useSelector(state => state.contacts.contacts)\r\n    return (\r\n        <ContactList\r\n            contactList={contactList}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport { Card, CardContent, Grid, Box, TextField, withTheme } from '@material-ui/core'\r\nimport NavBar from 'Component/NavBar'\r\nimport ContactList from 'Component/ContactList'\r\n\r\nconst Contact = ({ contact, handleChange, handleAdd, errors, theme }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n            <NavBar />\r\n            <StyledCard elevation={5}>\r\n                <StyledCardContent>\r\n                    <WrapperAdd theme={theme}>\r\n                        <StyledBox>\r\n                            <Title>Name</Title>\r\n                            <Content\r\n                                name='name'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                focused\r\n                                value={contact.name}\r\n                                onChange={handleChange}\r\n                                required\r\n                                inputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 15\r\n\t\t\t\t\t\t\t\t}}\r\n                                error={errors.name}\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Address</Title>\r\n                            <Content\r\n                                name='address'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.address}\r\n                                onChange={handleChange}\r\n                                error={errors.address}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Phone Number</Title>\r\n                            <Content\r\n                                name='phoneNumber'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.phoneNumber}\r\n                                onChange={handleChange}\r\n                                error={errors.phoneNumber}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Email</Title>\r\n                            <Content\r\n                                name='email'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <Operations>\r\n                            <Action onClick={handleAdd}>Add</Action>\r\n                        </Operations>\r\n                    </WrapperAdd>\r\n                    <ContactList />\r\n                </StyledCardContent>\r\n            </StyledCard>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(Contact)\r\n\r\nconst Wrapper = styled.div`\r\n    width:70%;\r\n    height:90%;\r\n    background-color: rgba(0, 0, 0, .1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap:1rem;\r\n    padding-bottom: 1rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        width:100%;\r\n    };\r\n`\r\nconst StyledCard = styled(Card)`\r\n    width:90%;\r\n    height:90%;\r\n`\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n    height:90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst WrapperAdd = styled(Grid)`\r\n    width:95%;\r\n    padding:.2rem;\r\n    margin-bottom:.2rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap:.3rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled(TextField)`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport Contact from './Contact'\r\nimport { useDispatch } from 'react-redux'\r\nimport {  setContacts } from 'Store/reducer'\r\nimport useSetContact from 'Hooks/useSetContact'\r\n\r\nconst Container = () => {\r\n    const dispatch = useDispatch()\r\n    const { contact, handleChange, handleAdd, errors } = useSetContact()\r\n  \r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/contact`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(res => dispatch(setContacts(res)))\r\n            .catch(e => console.log(e))\r\n    }, [])\r\n    \r\n    return (\r\n        <Contact\r\n            handleChange={handleChange}\r\n            handleAdd={handleAdd}\r\n            contact={contact}\r\n            errors={errors}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Contact from 'Component/Contact'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Contact/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n    height: 100vh;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n","import { combineReducers, createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport ContactReducer from './reducer'\r\n\r\nconst reducers = combineReducers({\r\n    contacts: ContactReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport default function configureStore(){\r\n    return createStore(\r\n        reducers,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : ''\r\n            )\r\n    )\r\n}","import React from 'react'\r\nimport HomePage from 'Views/HomePage'\r\nimport configureStore from 'Store/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = configureStore()\r\n\r\nconst App = () =>\r\n    <Provider store={store}>\r\n        <HomePage />\r\n    </Provider>\r\n\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from 'Component/App'\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}